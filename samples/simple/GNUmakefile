# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.3 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# Location where the package is installed by 'make install' 
prefix := /usr/local

# C++ compiler 
CXX := g++

# Standard linker flags 
LDFLAGS := 

# Standard flags for Harbour compiler 
HBFLAGS := -n -a -v -m -go

# [x]Harbour compiler 
HCC := harbour

# ---------------------------------------------------------------
# Harbour compiler flags
# ---------------------------------------------------------------
# 
# Type of Harbour compiled binaries [debug,release]
BUILD := release

# Warning level for the Harbour Compiler [0,1,2,3]
HBWARNL := 3

# Exit severity level for the Harbour Compiler [0,1,2]
HBEXITSL := 2

# Where to search for Harbour Includes 
HB_INC_PATH := /usr/include/harbour

# Where to search for Harbour libs 
HB_LIB_PATH := /usr/lib/harbour

# Where the object and lib files are built 
__BUILDDIR__ := obj/gcc-unix

#  [ansi,unicode]
WX_ENCODING := unicode

#  [release,debug]
WX_BUILD := release



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

SIMPLE_OBJECTS =  \
	$(__BUILDDIR__)/simple_simple.o
SIMPLE_HBFLAGS = $(HBFLAGS) -w$(HBWARNL) -es$(HBEXITSL) $(__HBDEBUG__) \
	-dHB_OS_LINUX -Iinclude -I$(HB_INC_PATH) -I$(prefix)/include -I../../include

### Conditionally set variables: ###

ifeq ($(BUILD),debug)
__HBDEBUG__ = -b -d_DEBUG_
endif
ifeq ($(WX_BUILD),release)
ifeq ($(WX_ENCODING),ansi)
__WXHLIBNAME_p = -lwxHarbour
endif
endif
ifeq ($(WX_BUILD),debug)
ifeq ($(WX_ENCODING),ansi)
__WXHLIBNAME_p = -lwxHarbour-$(WX_BUILD)
endif
endif
ifeq ($(WX_BUILD),release)
ifeq ($(WX_ENCODING),unicode)
__WXHLIBNAME_p = -lwxHarbour-$(WX_ENCODING)
endif
endif
ifeq ($(WX_BUILD),debug)
ifeq ($(WX_ENCODING),unicode)
__WXHLIBNAME_p = -lwxHarbour-$(WX_ENCODING)-$(WX_BUILD)
endif
endif
ifeq ($(WX_BUILD),debug)
__WX_DEBUG_INFO_4 = -g
endif


all: $(__BUILDDIR__)
$(__BUILDDIR__):
	@mkdir -p $(__BUILDDIR__)

### Targets: ###

all: ./simple

install: all

uninstall: 

clean: 
	rm -f $(__BUILDDIR__)/*.o
	rm -f $(__BUILDDIR__)/*.d
	rm -f ./simple

./simple: $(SIMPLE_OBJECTS)
	$(CXX) -o $@ $(SIMPLE_OBJECTS) $(LDFLAGS)  -L$(HB_LIB_PATH) -L/usr/X11R6/lib $(__WX_DEBUG_INFO_4) -L../../$(__BUILDDIR__)  -Wl,--start-group -lhbvm -lhbpp -lhbrtl -lhbrdd -lrddfpt -lrddcdx -lrddntx -lhbhsx -lhbsix -lhbusrrdd -lhbmacro -lhbcommon -lhblang -lhbcpage -lhbfm -lgtcrs -lgtsln -lgtxwc -lgttrm -lgtcgi -lgtstd -lgtpca -lhbdebug -lhbcplr -lhbpcre -lhbct -lhbnf -lhbtip $(__WXHLIBNAME_p) -Wl,--end-group -lm -ldl -lslang -lncurses -lX11 -lgpm `wx-config --libs`

run: all
	./simple

$(__BUILDDIR__)/simple_simple.o: ./simple.prg
	$(HCC) $(SIMPLE_HBFLAGS) -o$@ $<

.PHONY: all install uninstall clean


# Dependencies tracking:
-include $(__BUILDDIR__)/*.d
