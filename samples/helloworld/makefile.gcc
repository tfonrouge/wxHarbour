# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.3 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C++ compiler 
CXX := g++

# Standard linker flags 
LDFLAGS := 

# Standard flags for Harbour compiler 
HBFLAGS := -n -a -v -m -go

# [x]Harbour compiler 
HCC := harbour

# ---------------------------------------------------------------
# Harbour compiler flags
# ---------------------------------------------------------------
# 
# Type of Harbour compiled binaries [debug,release]
BUILD := debug

# Warning level for the Harbour Compiler [0,1,2,3]
HBWARNL := 3

# Exit severity level for the Harbour Compiler [0,1,2]
HBEXITSL := 2

# ---------------------------------------------------------------
# Harbour paths
# ---------------------------------------------------------------
# 
# Where to search for the Harbour compiler 
HB_BIN_PATH := $(HB_BIN_INSTALL)

# Where to search for Harbour Includes 
HB_INC_PATH := $(HB_INC_INSTALL)

# Where to search for Harbour libs 
HB_LIB_PATH := $(HB_LIB_INSTALL)

# Where the object and lib files are built 
__BUILDDIR__ := obj\gcc-win32

# ---------------------------------------------------------------
# wxWidgets flags (version 2.8 required)
# ---------------------------------------------------------------
# 
# Where is wxWidgets installed 
WX_PATH := C:\wxWidgets-2.8.7

#  [ansi,unicode]
WX_ENCODING := unicode

#  [release,debug]
WX_BUILD := release



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

HELLOWORLD_OBJECTS =  \
	$(__BUILDDIR__)\helloworld_helloworld.o
HELLOWORLD_HBFLAGS = $(HBFLAGS) -w$(HBWARNL) -es$(HBEXITSL) $(__HBDEBUG__) \
	-dHB_OS_WIN_32 -Iinclude -I$(HB_INC_PATH) $(__D_WX_UNICODE_p_2) \
	$(__D_WX_DEBUG_p_2) -D__WXMSW__ -I$(WX_PATH)\Include \
	-I$(WX_PATH)\lib\gcc_lib\msw$(WX_LIBID) -I..\..\include

### Conditionally set variables: ###

ifeq ($(BUILD),debug)
__HBDEBUG__ = -b
endif
ifeq ($(WX_ENCODING),unicode)
__D_WX_UNICODE_p_2 = -D_UNICODE
endif
ifeq ($(WX_BUILD),debug)
__D_WX_DEBUG_p_2 = -D__WXDEBUG__
endif
ifeq ($(WX_BUILD),debug)
__WX_DEBUG_INFO_4 = -g
endif
ifeq ($(WX_BUILD),release)
ifeq ($(WX_ENCODING),ansi)
__WXHLIBNAME_p = -lwxHarbour
endif
endif
ifeq ($(WX_BUILD),debug)
ifeq ($(WX_ENCODING),ansi)
__WXHLIBNAME_p = -lwxHarbour-$(WX_BUILD)
endif
endif
ifeq ($(WX_BUILD),release)
ifeq ($(WX_ENCODING),unicode)
__WXHLIBNAME_p = -lwxHarbour-$(WX_ENCODING)
endif
endif
ifeq ($(WX_BUILD),debug)
ifeq ($(WX_ENCODING),unicode)
__WXHLIBNAME_p = -lwxHarbour-$(WX_ENCODING)-$(WX_BUILD)
endif
endif
ifeq ($(WX_BUILD),debug)
ifeq ($(WX_ENCODING),ansi)
WX_LIBID = d
endif
endif
ifeq ($(WX_BUILD),debug)
ifeq ($(WX_ENCODING),unicode)
WX_LIBID = ud
endif
endif
ifeq ($(WX_BUILD),release)
ifeq ($(WX_ENCODING),unicode)
WX_LIBID = u
endif
endif


all: $(__BUILDDIR__)
$(__BUILDDIR__):
	-if not exist $(__BUILDDIR__) mkdir $(__BUILDDIR__)

### Targets: ###

all: .\helloworld.exe

clean: 
	-if exist $(__BUILDDIR__)\*.o del $(__BUILDDIR__)\*.o
	-if exist $(__BUILDDIR__)\*.d del $(__BUILDDIR__)\*.d
	-if exist .\helloworld.exe del .\helloworld.exe

.\helloworld.exe: $(HELLOWORLD_OBJECTS)
	$(CXX) -o $@ $(HELLOWORLD_OBJECTS) $(LDFLAGS) -Wl,--subsystem,windows -mwindows -L$(HB_LIB_PATH) $(__WX_DEBUG_INFO_4) -L$(WX_PATH)\lib\gcc_lib -L..\..\$(__BUILDDIR__)  -Wl,--start-group -lhbvm -lhbpp -lhbrtl -lhbrdd -lrddfpt -lrddcdx -lrddntx -lhbhsx -lhbsix -lhbusrrdd -lhbmacro -lhbcommon -lhblang -lhbcpage -lgtcgi -lgtstd -lgtpca -lhbdebug -lhbcplr -lhbpcre -lhbct -lhbnf -lhbtip -lxhb -lgtwin -Wl,--end-group $(__WXHLIBNAME_p) -lwxmsw28$(WX_LIBID)_richtext -lwxmsw28$(WX_LIBID)_aui -lwxmsw28$(WX_LIBID)_core -lwxbase28$(WX_LIBID) -lwxtiff -lwxjpeg -lwxpng -lwxzlib -lwxregex$(WX_LIBID) -lwxmsw28$(WX_LIBID)_adv -lwxmsw28$(WX_LIBID)_html -lwxmsw28$(WX_LIBID)_xrc -lwxbase28$(WX_LIBID)_net -lwxbase28$(WX_LIBID)_xml -lwxexpat -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32

run: all
	.\helloworld.exe

$(__BUILDDIR__)\helloworld_helloworld.o: ./helloworld.prg
	$(HB_BIN_PATH)/$(HCC) $(HELLOWORLD_HBFLAGS) -o$@ $<

.PHONY: all clean


SHELL := $(COMSPEC)

# Dependencies tracking:
-include $(__BUILDDIR__)/*.d
