<?xml version="1.0" ?>

<!-- Common Harbour template for Bakefiles  -->
<!-- 2007 Teo Fonrouge                      -->
<!-- v0.2                                   -->

<makefile>

  <echo>compiler: $(COMPILER)</echo>
  <echo>platform: $(PLATFORM_UNIX)</echo>
  <echo> toolset: $(TOOLSET)</echo>
  <echo>  format: $(FORMAT)</echo>

  <option name="WXHAPP">
    <values>yes,no</values>
    <values-description>Is a wxHarbour App,Is a simple Harbour App</values-description>
    <default-value>yes</default-value>
    <description>
      Type of Application
    </description>
  </option>

  <option name="BUILD">
    <values>debug,release</values>
    <values-description>Debug,Release</values-description>
    <default-value>debug</default-value>
    <description>
      Type of compiled binaries
    </description>
  </option>

  <option name="HBWARNL">
    <values>0,1,2,3</values>
    <default-value>3</default-value>
    <description>
      Warning level for the Harbour Compiler
    </description>
  </option>

  <option name="HBEXITS">
    <values>0,1,2</values>
    <default-value>2</default-value>
    <description>
      Exit severity level for the Harbour Compiler
    </description>
  </option>

  <option name="HBOUTTYP">
    <values>c,o,w,h</values>
    <default-value>o</default-value>
    <description>
      Output type generated by the Harbour Compiler
   </description>
  </option>

  <set var="WXHLIBNAME">
    wxharbour-$(COMPILER)-$(TOOLSET)
  </set>

  <set var="WXPATH" make_var="1">
    C:/wxWidgets-2.8.7
  </set>

  <set var="WXHPATH" make_var="1">
    <if cond="TOOLSET=='win32'">
      C:/wxH
    </if>
    <if cond="TOOLSET=='unix'">
      /usr/local/wxH
    </if>
  </set>

  <set var="BUILDDIR" make_var="1">
    <if cond="TOOLSET=='unix'">
      obj/$(COMPILER)-$(TOOLSET)
    </if>
    <if cond="TOOLSET=='win32'">
      obj\$(COMPILER)-$(TOOLSET)
    </if>
  </set>

  <set var="HBDEBUG">
    <if cond="BUILD=='debug'" >-b</if>
  </set>

  <set var="HBDEFINES">
    <if cond="TOOLSET=='win32'">
      -dHB_OS_WIN_32
    </if>
    <if cond="TOOLSET=='unix'">
      -dHB_OS_LINUX
    </if>
  </set>

  <set var="HBFLAGS" make_var="1">
    -n -a -v -m -g$(HBOUTTYP) $(HBDEBUG) -w$(HBWARNL) -es$(HBEXITS) $(HBDEFINES)
  </set>

  <set var="HBINCLUDES" make_var="1">
    <!-- Seems that bkl-gcc under mingw has trouble with -Ipath/ (the last"/") -->
    <if cond="TOOLSET=='win32'">
      -IInclude -IC:\Harbour\Include -I$(WXHPATH)\Include
    </if>
    <if cond="TOOLSET=='unix'">
      -Iinclude -I/usr/include/harbour -I/usr/local/include -I$(WXHPATH)/include
    </if>
  </set>

  <set var="WXFLAGS">
    <if cond="TOOLSET=='unix' and WXHAPP=='yes'">
      `wx-config --cxxflags`
    </if>
    <if cond="TOOLSET=='win32' and WXHAPP=='yes'">
      -I"$(WXPATH)/include" -I"$(WXPATH)/contrib/include" -I"$(WXPATH)/lib/gcc_lib/msw"
    </if>
  </set>

  <set var="HBLIBS" make_var="1">
    <if cond="COMPILER=='vc'">
      hbvm.lib hbpp.lib hbrtl.lib libct.lib nf.lib hbwin32.lib hbrdd.lib rddfpt.lib rddcdx.lib rddntx.lib hbhsx.lib hbsix.lib hbusrrdd.lib hbmacro.lib hbcommon.lib hblang.lib hbcpage.lib gtcgi.lib gtstd.lib gtpca.lib gtgui.lib gtwin.lib gtwvt.lib hbdebug.lib hbcplr.lib hbpcre.lib
    </if>
    <if cond="TOOLSET=='win32'">
      -LC:/Harbour/lib -Wl,--start-group -lhbvm -lhbpp -lhbrtl -lhbrdd -lrddfpt -lrddcdx -lrddntx -lhbhsx -lhbsix -lhbusrrdd -lhbmacro -lhbcommon -lhblang -lhbcpage -lgtwin -lgtcgi -lgtstd -lgtpca -lhbdebug -lhbcplr -lhbpcre -lhbct -lhbnf -lhbtip -lxhb -Wl,--end-group
    </if>
    <if cond="TOOLSET=='unix'">
      -L/usr/lib/harbour -Wl,--start-group -lhbvm -lhbpp -lhbrtl -lhbrdd -lrddfpt -lrddcdx -lrddntx -lhbhsx -lhbsix -lhbusrrdd -lhbmacro -lhbcommon -lhblang -lhbcpage -lgtcrs -lgtsln -lgtxwc -lgtcgi -lgtstd -lgtpca -lgttrm -lhbdebug -lhbcplr -lhbpcre -lhbct -lhbnf -lhbtip -lxhb -Wl,--end-group
    </if>
  </set>

  <set var="WXLIBS" make_var="1">
    <if cond="FORMAT=='vc'">
      -L$(WXHPATH)/lib $(WXHLIBNAME) "PLEASE SET HERE THE VC LDFLAGS VALUES"
    </if>
    <if cond="TOOLSET=='unix'">
      -L$(WXHPATH)/lib -l$(WXHLIBNAME) `wx-config --libs`
    </if>
    <if cond="TOOLSET=='win32'">
      -L$(WXHPATH)/lib -l$(WXHLIBNAME) -L"$(WXPATH)/lib/gcc_lib" -lwxmsw28_xrc -lwxmsw28_richtext -lwxmsw28_aui -lwxmsw28_adv -lwxmsw28_html -lwxmsw28_core -lwxbase28 -lwxbase28_net -lwxbase28_xml -lwxtiff -lwxjpeg -lwxpng -lwxzlib -lwxregex -lwxexpat
    </if>
  </set>

  <set var="OSLIBS" make_var="1">
    <if cond="COMPILER=='vc'">
      kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib /NODEFAULTLIB:MSVCRT
    </if>
    <if cond="TOOLSET=='win32'">
      -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32
    </if>
    <if cond="TOOLSET=='unix'">
      -lfm -lm -ldl -lslang -lncurses -L/usr/X11R6/lib -lX11 -lgpm
    </if>
  </set>

  <set var="LDFLAGS">
  </set>

  <set var="LDFLAGS">
    <if cond="WXHAPP=='no'">
      $(HBLIBS) $(OSLIBS)
    </if>
    <if cond="WXHAPP=='yes'">
      $(HBLIBS) $(WXLIBS) $(OSLIBS)
    </if>
  </set>

  <set var="CXXFLAGS">
    $(HBINCLUDES) $(WXFLAGS)
  </set>

  <set var="CXXFLAGS" prepend="1">
    <if cond="COMPILER=='gcc'">
      -fno-strict-aliasing
    </if>
  </set>

  <!-- Defines how to call the Harbour compiler in the makefiles -->
  <template id="__commands_templ_PRG">
    <!-- gnu Makefiles -->
    <if cond="FORMAT=='gnu'">
      <set var="__COMPILE_PRG_CMD" eval="0">
        harbour $(HBFLAGS) $(HBINCLUDES) -o$@ $&lt;
      </set>
    </if>
    <!-- mingw Makefiles -->
    <if cond="FORMAT=='mingw'">
      <set var="__COMPILE_PRG_CMD" eval="0">
        harbour $(HBFLAGS) $(HBINCLUDES) -o$@ $&lt;
      </set>
    </if>
    <if cond="FORMAT=='msvc'">
      <set var="__COMPILE_PRG_CMD" eval="0">
        harbour $(HBFLAGS) $(HBINCLUDES) -o$@ $**
      </set>
    </if>
    <if cond="FORMAT=='borland'">
      <set var="__COMPILE_PRG_CMD" eval="0">
        harbour $(HBFLAGS) $(HBINCLUDES) -o$@ $**
      </set>
    </if>
  </template>

  <define-rule name="__prg-to-$(OBJEXT[1:])" extends="__any,compilation_rule">
    <template template="__commands_templ_PRG">
      <set var="__command">$(__COMPILE_PRG_CMD)</set>
    </template>
    <define-tag name="parent-target">
      <set var="__uses_cxx" scope="$(__parent)">1</set>
      <set var="__cxxflags">$(targets[__parent].__cxxflags_var)</set>
    </define-tag>
  </define-rule>

</makefile>
