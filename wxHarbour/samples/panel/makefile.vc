# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.6 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# The common installation prefix for binary and DLL files 
EXEC_PREFIX = C:\opt\bin

# Standard linker flags 
LDFLAGS = 

# Path for the installed [x]Harbour compiler (bin,lib and include dirs) 
HBPATH_INSTALL = $(HB_INSTALL_PREFIX)

# [x]Harbour compiler used (www.harbour-project.org  or  www.xharbour.com) [harbour,xharbour]
#   harbour - www.harbour-project.org
#   xharbour - www.xharbour.com
HBCOMPILER = harbour

# [x]Harbour compiler executable name 
HBCC = harbour

# Link with Harbour multithread libraries [no,yes]
HBMT = no

# ---------------------------------------------------------------
# [x]Harbour optional libraries
# ---------------------------------------------------------------
# Link in the Harbour TIP library [yes,no]
HBLIB_TIP = no

# Link in the Harbour FM library [yes,no]
HBLIB_FM = no

# Link in the Harbour CT library [yes,no]
HBLIB_CT = yes

# Link in the Harbour GTWIN library [yes,no]
HBLIB_GTWIN = yes

# Link in the Harbour GTXVT library [yes,no]
HBLIB_GTXVT = no

# Link in the Harbour GTWVT library [yes,no]
HBLIB_GTWVT = no

# Link in the Harbour GTCGI library [yes,no]
HBLIB_GTCGI = no

# Link in the Harbour GTSTD library [yes,no]
HBLIB_GTSTD = no

# Link in the Harbour GTPCA library [yes,no]
HBLIB_GTPCA = no

# ---------------------------------------------------------------
# [x]Harbour compiler options
# ---------------------------------------------------------------
# Standard flags for Harbour compiler 
HBFLAGS = -n -a -v -m -go

# Type of Harbour compiled binaries [debug,release]
HBBUILD = release

# Warning level for the Harbour Compiler [0,1,2,3]
HBWARNL = 3

# Exit severity level for the Harbour Compiler [0,1,2]
HBEXITSL = 2

# Where to search for Harbour includes 
HB_INC_PATH = $(HB_INC_INSTALL)

# Where to search for Harbour libs 
HB_LIB_PATH = $(HB_LIB_INSTALL)

# Where the object and lib files are built 
__BUILDDIR__ = obj\vc-win32

# ---------------------------------------------------------------
# wxWidgets flags (version 2.8 required)
# ---------------------------------------------------------------
# 
# Where is wxWidgets installed 
WX_PATH = C:\wxWidgets-2.8.9

# Encoding [ansi,unicode]
WX_ENCODING = unicode

#  [release,debug]
WX_BUILD = release



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

PREFIX = $(HBPATH_INSTALL)
PANEL_OBJECTS =  \
	$(__BUILDDIR__)\panel_panel.obj
PANEL_HBFLAGS = $(HBFLAGS) -w$(HBWARNL) -es$(HBEXITSL) $(__HBDEBUG__) \
	$(__HBMTFLAG__) -dHB_OS_WIN_32 /Iinclude /I$(HB_INC_PATH) \
	/I$(PREFIX)\include $(____D_WX_UNICODE_FILENAMES_p) \
	$(____D_WX_DEBUG_FILENAMES_p) $(______WX_DEBUG_INFO_7_FILENAMES_p) \
	/D__WXMSW__ /I$(WX_PATH)\Include /I$(WX_PATH)\lib\vc_lib\msw$(WX_LIBID) \
	/D_WINDOWS /I..\..\include

### Conditionally set variables: ###

!if "$(HBMT)" == "yes"
__HBMTLIB__ = mt
!endif
!if "$(HBMT)" == "yes"
__HBMTFLAG__ = -DHB_MT
!endif
!if "$(HBBUILD)" == "debug"
__HBDEBUG__ = -b -d_DEBUG_
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_VM_p = hbvm$(__HBMTLIB__).lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_VM_p = vm$(__HBMTLIB__).lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_PP_p = hbpp.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_PP_p = pp.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_RTL_p = hbrtl.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_RTL_p = rtl.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_RDD_p = hbrdd.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_RDD_p = rdd.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_RDDFPT_p = rddfpt.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_RDDFPT_p = dbffpt.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_RDDCDX_p = rddcdx.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_RDDCDX_p = dbfcdx.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_RDDNTX_p = rddntx.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_RDDNTX_p = dbfntx.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_USRRDD_p = hbusrrdd.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_USRRDD_p = usrrdd.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_MACRO_p = hbmacro.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_MACRO_p = macro.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_COMMON_p = hbcommon.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_COMMON_p = common.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_LANG_p = hblang.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_LANG_p = lang.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_CPAGE_p = hbcpage.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_CPAGE_p = codepage.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_DEBUG_p = hbdebug.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_DEBUG_p = debug.lib
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_CPLR_p = hbcplr.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_CPLR_p = 
!endif
!if "$(HBCOMPILER)" == "harbour"
__LIB_PCRE_p = hbpcre.lib
!endif
!if "$(HBCOMPILER)" == "xharbour"
__LIB_PCRE_p = pcrepos.lib
!endif
!if "$(HBCOMPILER)" == "harbour" && "$(HBLIB_FM)" == "yes"
__LIB_FM_p = hbfm.lib
!endif
!if "$(HBCOMPILER)" == "xharbour" && "$(HBLIB_FM)" == "yes"
__LIB_FM_p = fm.lib
!endif
!if "$(HBCOMPILER)" == "harbour" && "$(HBLIB_CT)" == "yes"
__LIB_CT_p = hbct.lib
!endif
!if "$(HBCOMPILER)" == "xharbour" && "$(HBLIB_CT)" == "yes"
__LIB_CT_p = ct.lib
!endif
!if "$(HBCOMPILER)" == "harbour" && "$(HBLIB_TIP)" == "yes"
__LIB_TIP_p = hbtip.lib
!endif
!if "$(HBCOMPILER)" == "xharbour" && "$(HBLIB_TIP)" == "yes"
__LIB_TIP_p = tip.lib
!endif
!if "$(HBLIB_GTCGI)" == "yes"
__LIB_GTCGI_p = gtcgi.lib
!endif
!if "$(HBLIB_GTSTD)" == "yes"
__LIB_GTSTD_p = gtstd.lib
!endif
!if "$(HBLIB_GTPCA)" == "yes"
__LIB_GTPCA_p = gtpca.lib
!endif
!if "$(HBLIB_GTXVT)" == "yes"
__LIB_GTXVT_p = gtxvt.lib
!endif
!if "$(HBLIB_GTWIN)" == "yes"
__LIB_GTWIN_p = gtwin.lib
!endif
!if "$(HBLIB_GTWVT)" == "yes"
__LIB_GTWVT_p = gtwvt.lib
!endif
!if "$(WX_BUILD)" == "release" && "$(WX_ENCODING)" == "ansi"
__WXHLIBNAME_p = wxHarbour.lib
!endif
!if "$(WX_BUILD)" == "debug" && "$(WX_ENCODING)" == "ansi"
__WXHLIBNAME_p = wxHarbour-$(WX_BUILD).lib
!endif
!if "$(WX_BUILD)" == "release" && "$(WX_ENCODING)" == "unicode"
__WXHLIBNAME_p = wxHarbour-$(WX_ENCODING).lib
!endif
!if "$(WX_BUILD)" == "debug" && "$(WX_ENCODING)" == "unicode"
__WXHLIBNAME_p = wxHarbour-$(WX_ENCODING)-$(WX_BUILD).lib
!endif
!if "$(WX_ENCODING)" == "unicode"
____D_WX_UNICODE_FILENAMES_p = /D_UNICODE
!endif
!if "$(WX_BUILD)" == "debug"
____D_WX_DEBUG_FILENAMES_p = /D__WXDEBUG__
!endif
!if "$(WX_BUILD)" == "debug"
__WX_DEBUG_INFO_6 = /DEBUG
!endif
!if "$(WX_BUILD)" == "debug"
______WX_DEBUG_INFO_7_FILENAMES_p = /D_DEBUG
!endif
!if "$(WX_BUILD)" == "debug" && "$(WX_ENCODING)" == "ansi"
WX_LIBID = d
!endif
!if "$(WX_BUILD)" == "debug" && "$(WX_ENCODING)" == "unicode"
WX_LIBID = ud
!endif
!if "$(WX_BUILD)" == "release" && "$(WX_ENCODING)" == "unicode"
WX_LIBID = u
!endif


all: $(__BUILDDIR__)
$(__BUILDDIR__):
	-if not exist $(__BUILDDIR__) mkdir $(__BUILDDIR__)

### Targets: ###

all: .\panel.exe

install: 

uninstall: 

clean: 
	-if exist $(__BUILDDIR__)\*.obj del $(__BUILDDIR__)\*.obj
	-if exist $(__BUILDDIR__)\*.res del $(__BUILDDIR__)\*.res
	-if exist $(__BUILDDIR__)\*.pch del $(__BUILDDIR__)\*.pch
	-if exist .\panel.exe del .\panel.exe
	-if exist .\panel.ilk del .\panel.ilk
	-if exist .\panel.pdb del .\panel.pdb

.\panel.exe: $(PANEL_OBJECTS)
	link /NOLOGO /OUT:$@  $(__WX_DEBUG_INFO_6) /pdb:".\panel.pdb" /LIBPATH:$(WX_PATH)\lib\vc_lib /SUBSYSTEM:WINDOWS /LIBPATH:$(HB_LIB_PATH) /LIBPATH:..\..\$(__BUILDDIR__) $(LDFLAGS) @<<
	$(PANEL_OBJECTS)  $(__LIB_VM_p) $(__LIB_PP_p) $(__LIB_RTL_p) $(__LIB_RDD_p) $(__LIB_RDDFPT_p) $(__LIB_RDDCDX_p) $(__LIB_RDDNTX_p) hbsix.lib $(__LIB_USRRDD_p) $(__LIB_MACRO_p) $(__LIB_COMMON_p) $(__LIB_LANG_p) $(__LIB_CPAGE_p) $(__LIB_DEBUG_p) $(__LIB_CPLR_p) $(__LIB_PCRE_p) $(__LIB_FM_p) $(__LIB_CT_p) $(__LIB_TIP_p) $(__LIB_GTCGI_p) $(__LIB_GTSTD_p) $(__LIB_GTPCA_p) $(__LIB_GTXVT_p) $(__LIB_GTWIN_p) $(__LIB_GTWVT_p) hbwin.lib $(__WXHLIBNAME_p) wxmsw28$(WX_LIBID)_richtext.lib wxmsw28$(WX_LIBID)_aui.lib wxmsw28$(WX_LIBID)_core.lib wxbase28$(WX_LIBID).lib wxtiff.lib wxjpeg.lib wxpng.lib wxzlib.lib wxregex$(WX_LIBID).lib wxmsw28$(WX_LIBID)_adv.lib wxmsw28$(WX_LIBID)_html.lib wxmsw28$(WX_LIBID)_xrc.lib wxbase28$(WX_LIBID)_net.lib wxbase28$(WX_LIBID)_xml.lib wxexpat.lib kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib /NODEFAULTLIB:LIBCMT /FORCE
<<

run: all
	.\panel.exe

$(__BUILDDIR__)\panel_panel.obj: .\panel.prg
	$(HBCC) $(PANEL_HBFLAGS) -o$@ $**

